{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation Test Template vpc_single_instance_in_subnet.template: Create a VPC and add an EC2 instance with a security group.",

    "Parameters": {
        "Ec2ImageId": {
            "Type": "AWS::SSM::Parameter::Value<String>",
            "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
        },
        "InstanceType": {
            "Description": "EC2 instance type",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [ "t1.micro", "t2.micro", "m1.small", "m1.medium", "m1.large", "m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "MinLength": "1",
            "MaxLength": "255",
            "ConstraintDescription": "can contain only ASCII characters."
        },
        "SSHLocation": {
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "18",
            "Default": "0.0.0.0/0",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },

    "Resources": {
        
        "VPC": {
          "Type": "AWS::EC2::VPC",
          "Properties": {
            "CidrBlock": "10.0.0.0/16",
            "Tags": [{"Key": "Application", "Value": {"Ref": "AWS::StackId"}}]
          }
        },

        "Subnet": {
          "Type": "AWS::EC2::Subnet",
          "Properties": {
            "VpcId": {"Ref": "VPC"},
            "CidrBlock": "10.0.0.0/24",
            "MapPublicIpOnLaunch": "True",
            "Tags": [{"Key": "Application", "Value": {"Ref": "AWS::StackId"}}]
          }
        },
        
        "InternetGateway": {
          "Type": "AWS::EC2::InternetGateway",
          "Properties": {
            "Tags": [{"Key": "Application", "Value": {"Ref": "AWS::StackId"}}]
          }
        },
        "AttachGateway": {
          "Type": "AWS::EC2::VPCGatewayAttachment",
          "Properties": {
            "VpcId": {"Ref": "VPC"},
            "InternetGatewayId": { "Ref": "InternetGateway" }
          }
        },

        "RouteTable": {
          "Type": "AWS::EC2::RouteTable",
          "Properties": {
            "VpcId": {"Ref": "VPC"},
            "Tags": [{"Key": "Application", "Value": {"Ref": "AWS::StackId"}}]
          }
        },

        "Route": {
          "Type": "AWS::EC2::Route",
          "DependsOn": "AttachGateway",
          "Properties": {
            "RouteTableId": {"Ref": "RouteTable"},
            "DestinationCidrBlock": "0.0.0.0/0",
            "GatewayId": {"Ref": "InternetGateway"}
          }
        },
        
        "SubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {"Ref": "Subnet"},
                "RouteTableId": {"Ref": "RouteTable"}
            }
        },

        "NetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "Tags": [{"Key": "Application", "Value": {"Ref": "AWS::StackId"}}]
            }
        },

        "InboundNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {"Ref": "NetworkAcl"},
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0"
            }
        },

        "OutBoundNetworkAclEntry": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {"Ref": "NetworkAcl"},
                "RuleNumber": "100",
                "Protocol": "-1",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0"
            }
        },

        "SubnetNetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {"Ref": "Subnet"},
                "NetworkAclId": {"Ref": "NetworkAcl"}
            }
        },

        "InstanceSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {"Ref": "VPC"},
                "GroupDescription": "Enable SSH access via port 22",
                "SecurityGroupIngress": [
                    {"IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": {"Ref": "SSHLocation"}}
                ]
            }
        },
        
        "EC2Instance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {"Ref": "Ec2ImageId"},
                "SecurityGroupIds": [{"Ref": "InstanceSecurityGroup"}],
                "SubnetId": {"Ref": "Subnet"},
                "InstanceType": {"Ref": "InstanceType"},
                "KeyName": {"Ref": "KeyName"},
                "Tags": [{"Key": "Application", "Value": "string"}]
            }
        }
    }
}